//
//  CMTabBarController.m
//
//  Created by Constantine Mureev on 13.03.12.
//  Copyright (c) 2012 Team Force LLC. All rights reserved.
//

#import "CMTabBarController.h"


@interface CMTabBarController ()

@property (assign) BOOL         firstAppear;

- (CGRect)frameForViewControllers;

@end


@implementation CMTabBarController

@synthesize firstAppear;
@synthesize viewControllers, selectedIndex, tabBar = _tabBar, delegate, imgNormals, imgSelecteds, titles;
@dynamic selectedViewController;

static CMTabBarController* sharedInstance = nil;

+ (id)sharedTabBarController {
    return sharedInstance;
}

- (id)init {
    self = [super init];
    if (self) {
        sharedInstance = self;
    }
    return self;
}

- (void)dealloc {
    self.viewControllers = nil;
    self.imgNormals = nil;
    self.imgSelecteds = nil;
    self.titles = nil;
    self.tabBar.delegate = nil;
    self.tabBar = nil;
    self.delegate = nil;
}

//- (NSInteger)supportedInterfaceOrientations
//{
//    return UIInterfaceOrientationMaskLandscape;
//}

- (BOOL)shouldAutorotate
{
    return YES;
}

- (void)loadView {
    CGRect frame = [[UIScreen mainScreen] bounds];
    self.view = [[UIView alloc] initWithFrame:frame];
    self.view.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleHeight;
    
    CGFloat tabBarHeight = 56.0f;
    self.tabBar = [[CMTabBar alloc] initWithFrame:CGRectMake(0, frame.size.height - tabBarHeight, frame.size.width, tabBarHeight)];
    self.tabBar.autoresizingMask = UIViewAutoresizingFlexibleWidth | UIViewAutoresizingFlexibleTopMargin;
    [self.view addSubview:self.tabBar];
    
    self.tabBar.delegate = self;
    
    self.firstAppear = YES;
    
//    for (UIViewController* vc in self.viewControllers) {
//        [vc loadView];
//    }
}

- (void)viewWillAppear:(BOOL)animated {
    [super viewWillAppear:animated];
    
    if (firstAppear) {
        // Custom logic
        NSMutableArray* tabBarItems = [NSMutableArray array];
        CGRect newFrame = [self frameForViewControllers];
        
        for (UIViewController* vc in self.viewControllers) {
            [tabBarItems addObject:vc.tabBarItem];
            
            // Update frame to real size ()
            vc.view.frame = newFrame;
        }
        [self.tabBar setItems:self.imgNormals imgSelecteds:self.imgSelecteds titles:self.titles animated:NO];
        
        [self.view addSubview:self.selectedViewController.view];        
        [self.view bringSubviewToFront:self.tabBar];
        
        self.firstAppear = NO;
    }
    
//    if (SYSTEM_VERSION_LESS_THAN(@"5.0")) {
//        [self.selectedViewController viewWillAppear:animated];
//    }
}

- (void)viewDidAppear:(BOOL)animated {
    [super viewDidAppear:animated];    
    
//    if (SYSTEM_VERSION_LESS_THAN(@"5.0")) {
//        [self.selectedViewController viewDidAppear:animated];
//    }
}

- (void)viewWillDisappear:(BOOL)animated {
    [super viewWillDisappear:animated];
    
//    if (SYSTEM_VERSION_LESS_THAN(@"5.0")) {
//        [self.selectedViewController viewWillDisappear:animated];
//    }
}

- (void)viewDidDisappear:(BOOL)animated {
    [super viewDidDisappear:animated];
    
//    if (SYSTEM_VERSION_LESS_THAN(@"5.0")) {
//        [self.selectedViewController viewDidDisappear:animated];
//    }
}

- (void)viewDidLoad {
    [super viewDidLoad];
    
//    for (UIViewController* vc in self.viewControllers) {
//        [vc viewDidLoad];
//    }
}

- (void)viewDidUnload {
    [super viewDidUnload];
    
//    for (UIViewController* vc in self.viewControllers) {
//        [vc viewDidUnload];
//    }
}

- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
//    for (UIViewController* vc in self.viewControllers) {
//        [vc shouldAutorotateToInterfaceOrientation:interfaceOrientation];
//    }
    
	return (interfaceOrientation == UIInterfaceOrientationLandscapeLeft || interfaceOrientation == UIInterfaceOrientationLandscapeRight);
}
//
//- (void)willRotateToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration {
//    for (UIViewController* vc in self.viewControllers) {
//        [vc willRotateToInterfaceOrientation:toInterfaceOrientation duration:duration];
//    }
//}
//
- (void)didRotateFromInterfaceOrientation:(UIInterfaceOrientation)fromInterfaceOrientation {
	// Custom logic
//	NSMutableArray* tabBarItems = [NSMutableArray array];
//	CGRect newFrame = [self frameForViewControllers];
//	
//	for (UIViewController* vc in self.viewControllers) {
//		[tabBarItems addObject:vc.tabBarItem];
//		
//		// Update frame to real size ()
//		vc.view.frame = newFrame;
//	}
    
    /*    此处代码会导致二级页被背景视图挡住,详情页不能正常显示  by yuhaoran    
	[self.tabBar setItems:self.imgNormals imgSelecteds:self.imgSelecteds titles:self.titles animated:NO];
	
	[self.view addSubview:self.selectedViewController.view];
	[self.view bringSubviewToFront:self.tabBar];
    */
    
//    for (UIViewController* vc in self.viewControllers) {
//        [vc didRotateFromInterfaceOrientation:fromInterfaceOrientation];
//    }
}
//
//- (void)willAnimateRotationToInterfaceOrientation:(UIInterfaceOrientation)toInterfaceOrientation duration:(NSTimeInterval)duration {
//    for (UIViewController* vc in self.viewControllers) {
//        [vc willAnimateRotationToInterfaceOrientation:toInterfaceOrientation duration:duration];
//    }
//}

- (UIViewController*)selectedViewController {
    return [self.viewControllers objectAtIndex:self.tabBar.selectedIndex];
}

- (NSUInteger)selectedIndex{
	return self.tabBar.selectedIndex;
}


#pragma mark - Private


- (CGRect)frameForViewControllers {
    CGFloat height = self.view.bounds.size.height;
    
	height -= self.tabBar.bounds.size.height;
    
    return CGRectMake(0, 0, self.view.bounds.size.width, height);
}


#pragma mark - UITabBarDelegate


- (void)tabBar:(id)tabBar willSelectItemAtIndex:(NSUInteger)index currentIndex:(NSUInteger)currentIndex {
    UIViewController* willSelectViewController = (UIViewController*)[self.viewControllers objectAtIndex:index];
    CGRect frame = [self frameForViewControllers];
    if (!CGRectEqualToRect(frame, willSelectViewController.view.frame)) {
        willSelectViewController.view.frame = frame;
    }
	
	if (currentIndex != index && delegate != nil && [delegate respondsToSelector:@selector(tabBarController: shouldSelectViewController:)]) {
		[delegate tabBarController:self shouldSelectViewController:willSelectViewController];
	}
    
//    if (SYSTEM_VERSION_LESS_THAN(@"5.0")) {
//        [self.selectedViewController viewWillDisappear:NO];
//        [willSelectViewController viewWillAppear:NO];
//    }
}

- (void)tabBar:(id)tabBar didSelectItemAtIndex:(NSUInteger)index prviousIndex:(NSUInteger)prviousIndex {
    UIViewController* currentViewController = (UIViewController*)[self.viewControllers objectAtIndex:prviousIndex];
    [currentViewController.view removeFromSuperview];
    
    [self.view addSubview:self.selectedViewController.view];        
    [self.view bringSubviewToFront:self.tabBar];
    
//    if (SYSTEM_VERSION_LESS_THAN(@"5.0")) {
//        [currentViewController viewDidDisappear:NO];
//        [self.selectedViewController viewDidAppear:NO];
//    }
}

- (void)hidesBottomBarWhenPushed:(BOOL)hidden
{
	if (hidden) {
		for (UIView * view in _UI.mainTabCtrl.view.subviews) {
            [UIView animateWithDuration:0.4 animations:^(void){
                if ([view isKindOfClass:[CMTabBar class]]) {
                    CGRect frame = view.frame;
//                    frame.origin.y += 56;
                    frame.origin.y = 748;
                    view.frame = frame;
                }
                else {
                    CGRect frame = view.frame;
//                    frame.size.height += 56;
                    frame.size.height = 748;
                    view.frame = frame;
                }
            }];
		}
	}
	else {
		for (UIView * view in _UI.mainTabCtrl.view.subviews) {
            [UIView animateWithDuration:0.4 animations:^(void){
                if ([view isKindOfClass:[CMTabBar class]]) {
                    CGRect frame = view.frame;
//                    frame.origin.y -= 56;
                    frame.origin.y = 692;
                    view.frame = frame;
                }
                else {
                    CGRect frame = view.frame;
//                    frame.size.height -= 56;
//                    frame.size.height = 692;
                    view.frame = frame;
                }
            }];

		}
	}
}

@end
